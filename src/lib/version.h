/**
 * @file version.h
 * @brief Provides simple version information as macros / helper functions
 *
 * This header file defines macros and a function to handle version information.
 * It provides commit version strings and a flag indicating if the working directory is dirty.
 * The `version` function prints the version information to a given stream.
 *
 * Macros (Define these during compile time):
 * - VERSION_COMMIT: The short commit hash (default: "????????").
 * - VERSION_COMMIT_FULL: The full commit hash (default: "????????????????????????????????????????").
 * - VERSION_DIRTY: Flag indicating if the working directory has uncommitted changes (default: 1).
 *
 * @note DO NOT EDIT THIS FILE
 * 
 * @date 2024-07
 */

#ifndef VERSION_H
#define VERSION_H

#if !defined VERSION_COMMIT
#define VERSION_COMMIT "????????"
#else
#define HAS_VERSION_COMMIT
#endif // VERSION_COMMIT

#if !defined VERSION_COMMIT_FULL
#define VERSION_COMMIT_FULL "????????????????????????????????????????"
#else
#define HAS_VERSION_COMMIT_FULL
#endif // VERSION_COMMIT_FULL

#if !defined VERSION_DIRTY
#define VERSION_DIRTY 1
#else
#define HAS_VERSION_DIRTY
#endif // VERSION_DIRTY

static void version(FILE *const _stream, const char * title)
{
#if VERSION_DIRTY==0
    fprintf(_stream, "%s - %s\n", title, VERSION_COMMIT_FULL);
#else //VERSION_DIRTY==1
    fprintf(_stream, "(DIRTY) %s - %s\n", title, VERSION_COMMIT_FULL);
#endif
}

#endif // VERSION_H